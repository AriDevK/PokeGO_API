// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Ariadne Rangel aka AriDevK",
            "url": "AriDev.me",
            "email": "AriadneFave@hotmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Get all pokemon",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pokemon"
                ],
                "summary": "Get all pokemon",
                "parameters": [
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "int valid",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "int valid",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/generation/{number}": {
            "get": {
                "description": "Get all pokemon by generation number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pokemon"
                ],
                "summary": "Get all pokemon by generation number",
                "parameters": [
                    {
                        "maximum": 8,
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "int valid",
                        "name": "number",
                        "in": "path"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "int valid",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "int valid",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/pokedex/{pokedexNumber}": {
            "get": {
                "description": "Get all pokemon by pokedex number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pokemon"
                ],
                "summary": "Get all pokemon by pokedex number",
                "parameters": [
                    {
                        "maximum": 898,
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "int valid",
                        "name": "pokedexNumber",
                        "in": "path"
                    }
                ],
                "responses": {}
            }
        },
        "/region/{name}": {
            "get": {
                "description": "Get all pokemon by region name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pokemon"
                ],
                "summary": "Get all pokemon by region name",
                "parameters": [
                    {
                        "enum": [
                            "Kanto",
                            "Johto",
                            "Hoenn",
                            "Sinnoh",
                            "Unova",
                            "Kalos",
                            "Alola",
                            "Galar"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "int valid",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "int valid",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/type/{name}": {
            "get": {
                "description": "Get all pokemon by type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pokemon"
                ],
                "summary": "Get all pokemon by type",
                "parameters": [
                    {
                        "enum": [
                            "Fire",
                            "Water",
                            "Grass",
                            "Electric",
                            "Ice",
                            "Fighting",
                            "Poison",
                            "Ground",
                            "Flying",
                            "Psychic",
                            "Bug",
                            "Rock",
                            "Ghost",
                            "Dark",
                            "Dragon",
                            "Steel",
                            "Fairy"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "int valid",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer",
                        "default": 1,
                        "example": 0,
                        "description": "int valid",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Pokemon API",
	Description:      "This is a sample server for Pokemon API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
